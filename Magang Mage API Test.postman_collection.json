{
	"info": {
		"_postman_id": "64499de7-5b8e-4a6d-aeb6-9641917ed802",
		"name": "Magang Mage API Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Getting All Burst Message",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('status code should be 200', () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test('response header Content-Type should be application/json', () => {\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.equals('application/json');\r",
							"});\r",
							"\r",
							"pm.test('response body should be an object', () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson).to.be.an('object');\r",
							"});\r",
							"\r",
							"pm.test('response body should have correct property and value', () => {\r",
							"    const responsJson = pm.response.json();\r",
							"    \r",
							"    pm.expect(responsJson).to.haveOwnProperty('results');\r",
							"});\r",
							"\r",
							"pm.test('response body data object should have a array burst message', () => {\r",
							"    const responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson).to.haveOwnProperty('results');\r",
							"    pm.expect(responseJson.results).to.be.an('array');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost/magangkel5/public/api/getallburstmessageapi",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"magangkel5",
						"public",
						"api",
						"getallburstmessageapi"
					]
				}
			},
			"response": []
		},
		{
			"name": "Adding Burst Message",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('response status code should have 200 value', () => {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"});\r",
							"\r",
							"pm.test('response Content-Type header should have application/json value', () => {\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.equals('application/json');\r",
							"});\r",
							"\r",
							"pm.test('response body should be an object', () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson).to.be.an('object');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"messaging_product\": \"whatsapp\",\r\n    \"recipient_type\": \"individual\",\r\n    \"to\": \"62812345678910\",\r\n    \"type\": \"text\",\r\n    \"text\": {\r\n        \"preview_url\": false,\r\n        \"body\": \"Halo selamat pagi\"\r\n        }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost/magangkelmage/public/api/inserthitapi",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"magangkelmage",
						"public",
						"api",
						"inserthitapi"
					]
				}
			},
			"response": []
		},
		{
			"name": "Getting Specified Burst Message",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('response status code should have 200 value', () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test('response Content-Type header should have application/json value', () => {\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.equals('application/json');\r",
							"});\r",
							"\r",
							"pm.test('response body should be an object', () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson).to.be.an('object');\r",
							"});\r",
							"\r",
							"pm.test('response body should have the correct property and value', () =>{\r",
							"    const responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson).to.have.ownProperty('results');\r",
							"});\r",
							"\r",
							"pm.test('response body results should contain burst message object', () =>{\r",
							"    const responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson).to.have.ownProperty('results');\r",
							"    pm.expect(responseJson).to.be.an('object');\r",
							"});\r",
							"\r",
							"pm.test('burst message object should contain correct value for id property', () => {\r",
							"    const responseJson = pm.response.json();\r",
							"    const data = responseJson.results.find(m => m.id === '1');\r",
							"\r",
							"    const expectedId = '1';\r",
							"\r",
							"    pm.expect(data).to.have.ownProperty('id');\r",
							"    pm.expect(data.id).to.equals(expectedId);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost/magangkel5/public/api/getburstmessageapibyid/{{id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"magangkel5",
						"public",
						"api",
						"getburstmessageapibyid",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1",
			"type": "default"
		}
	]
}